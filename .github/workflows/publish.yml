name: Demo Push

on:
  release:
  issue_comment:
    types: [created]

env:
  IMAGE_NAME: hello-world-docker-action

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: |
      (github.event.issue.pull_request && contains(github.event.comment.body, 'container push')) || \
      (github.event.action == 'published')
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      # - name: Build image
      #   run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      # - name: Log in to registry
      #   # This is where you will update the personal access token to GITHUB_TOKEN
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: |
          echo "${{ github.ref }}"
          # IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # # Change all uppercase to lowercase
          # IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # # Strip git ref prefix from version
          # VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # # Strip "v" prefix from tag name
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # # Use Docker `latest` tag convention
          # [ "$VERSION" == "master" ] && VERSION=latest
          # echo IMAGE_ID=$IMAGE_ID
          # echo VERSION=$VERSION
          # docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          # docker push $IMAGE_ID:$VERSION
